{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TelaChat = function TelaChat(_ref) {\n  var route = _ref.route;\n  var contact = route.params.contact;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newMessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  var handleSendMessage = function handleSendMessage() {\n    if (newMessage) {\n      setMessages([].concat(_toConsumableArray(messages), [{\n        id: messages.length,\n        text: newMessage\n      }]));\n      setNewMessage('');\n    }\n  };\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.botaopular,\n      onPress: function onPress() {\n        return navigation.navigate('TelaContatos');\n      },\n      children: _jsxs(Text, {\n        style: {\n          color: '#000',\n          fontSize: 35,\n          left: 25,\n          marginTop: 60\n        },\n        children: [\" \", _jsx(Icon, {\n          name: \"leftcircle\",\n          size: 40,\n          color: \"#17A558\"\n        }), \" \", contact.name]\n      })\n    }), _jsx(FlatList, {\n      style: {\n        marginTop: 45\n      },\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(View, {\n          style: styles.messageContainer,\n          children: _jsx(View, {\n            style: styles.messageBubble,\n            children: _jsx(Text, {\n              children: item.text\n            })\n          })\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: newMessage,\n        onChangeText: function onChangeText(text) {\n          return setNewMessage(text);\n        },\n        placeholder: \"Digite sua mensagem...\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: handleSendMessage,\n        children: _jsx(Text, {\n          style: {\n            color: '#fff'\n          },\n          children: \"Enviar\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  messageContainer: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    alignItems: 'flex-end'\n  },\n  messageBubble: {\n    backgroundColor: '#B1D3C1',\n    padding: 10,\n    borderRadius: 10\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 15\n  },\n  input: {\n    flex: 1,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 20,\n    paddingHorizontal: 15,\n    height: 45\n  },\n  sendButton: {\n    color: '#fff',\n    backgroundColor: '#17A558',\n    borderRadius: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    height: 40,\n    width: 80\n  }\n});\nexport default TelaChat;","map":{"version":3,"names":["React","useState","View","FlatList","TouchableOpacity","Text","TextInput","StyleSheet","useNavigation","Icon","jsx","_jsx","jsxs","_jsxs","TelaChat","_ref","route","contact","params","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","newMessage","setNewMessage","handleSendMessage","concat","_toConsumableArray","id","length","text","navigation","style","styles","container","children","botaopular","onPress","navigate","color","fontSize","left","marginTop","name","size","data","keyExtractor","item","toString","renderItem","_ref2","messageContainer","messageBubble","inputContainer","input","value","onChangeText","placeholder","sendButton","create","flex","justifyContent","flexDirection","marginBottom","paddingHorizontal","alignItems","backgroundColor","padding","borderRadius","marginRight","borderWidth","borderColor","height","paddingVertical","width"],"sources":["C:/Users/MICRO/Documents/GitHub/AppLinkedPark/src/paginas/TelaChat/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, FlatList, TouchableOpacity, Text, TextInput, StyleSheet } from 'react-native';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\n\r\nconst TelaChat = ({ route }) => {\r\n  const { contact } = route.params;\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage) {\r\n      setMessages([...messages, { id: messages.length, text: newMessage }]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <TouchableOpacity style={styles.botaopular} onPress={ () => navigation.navigate('TelaContatos')} >\r\n            <Text style={{color: '#000',fontSize: 35, left: 25, marginTop: 60}}> <Icon name=\"leftcircle\" size={40} color='#17A558'/> {contact.name}</Text>\r\n        </TouchableOpacity>\r\n      <FlatList\r\n       style={{marginTop: 45}}\r\n        data={messages}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.messageContainer}>\r\n            <View style={styles.messageBubble}>\r\n              <Text>{item.text}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={newMessage}\r\n          onChangeText={(text) => setNewMessage(text)}\r\n          placeholder=\"Digite sua mensagem...\"\r\n        />\r\n        <TouchableOpacity style={styles.sendButton} onPress={handleSendMessage}><Text style={{color: '#fff'}}>Enviar</Text></TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    messageContainer: {\r\n      flexDirection: 'row',\r\n      marginBottom: 10,\r\n      paddingHorizontal: 10,\r\n      alignItems: 'flex-end',\r\n    },\r\n    messageBubble: {\r\n      backgroundColor: '#B1D3C1',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n      \r\n    },\r\n    inputContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      padding: 15,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      marginRight: 10,\r\n      borderWidth: 1,\r\n      borderColor: '#ccc',\r\n      borderRadius: 20,\r\n      paddingHorizontal: 15,\r\n      height: 45\r\n    },\r\n    sendButton: {\r\n      color: '#fff', // cor do texto do botão\r\n      backgroundColor: '#17A558', // cor de fundo do botão\r\n      borderRadius: 20, // borda arredondada do botão\r\n      paddingVertical: 10, // preenchimento vertical\r\n      paddingHorizontal: 20, // preenchimento horizontal\r\n      height: 40,\r\n      width: 80\r\n    },\r\n});\r\n\r\nexport default TelaChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}