{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _open, _openAuth, _isAvailable;\nimport { isAndroid, RNInAppBrowser, openBrowserAsync, openAuthSessionAsync, openAuthSessionPolyfillAsync, closeAuthSessionPolyfillAsync, authSessionIsNativelySupported } from \"./utils\";\nfunction open(_x, _x2) {\n  return (_open = _open || _asyncToGenerator(function* (url, options) {\n    return openBrowserAsync(url, options);\n  })).apply(this, arguments);\n}\nfunction openAuth(_x3, _x4, _x5) {\n  return (_openAuth = _openAuth || _asyncToGenerator(function* (url, redirectUrl, options) {\n    if (authSessionIsNativelySupported()) {\n      return openAuthSessionAsync(url, redirectUrl, options);\n    } else {\n      return openAuthSessionPolyfillAsync(url, redirectUrl, options);\n    }\n  })).apply(this, arguments);\n}\nfunction close() {\n  RNInAppBrowser.close();\n}\nfunction warmup() {\n  if (isAndroid) {\n    return RNInAppBrowser.warmup();\n  }\n  return Promise.resolve(false);\n}\nfunction mayLaunchUrl(mostLikelyUrl) {\n  var otherUrls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (isAndroid) {\n    RNInAppBrowser.mayLaunchUrl(mostLikelyUrl, otherUrls);\n  }\n}\nfunction closeAuth() {\n  closeAuthSessionPolyfillAsync();\n  if (authSessionIsNativelySupported()) {\n    RNInAppBrowser.closeAuth();\n  } else {\n    close();\n  }\n}\nfunction isAvailable() {\n  return (_isAvailable = _isAvailable || _asyncToGenerator(function* () {\n    return RNInAppBrowser.isAvailable();\n  })).apply(this, arguments);\n}\nexport var InAppBrowser = {\n  open: open,\n  openAuth: openAuth,\n  close: close,\n  closeAuth: closeAuth,\n  isAvailable: isAvailable,\n  warmup: warmup,\n  mayLaunchUrl: mayLaunchUrl\n};\nexport default InAppBrowser;","map":{"version":3,"names":["isAndroid","RNInAppBrowser","openBrowserAsync","openAuthSessionAsync","openAuthSessionPolyfillAsync","closeAuthSessionPolyfillAsync","authSessionIsNativelySupported","open","_x","_x2","_open","_asyncToGenerator","url","options","apply","arguments","openAuth","_x3","_x4","_x5","_openAuth","redirectUrl","close","warmup","Promise","resolve","mayLaunchUrl","mostLikelyUrl","otherUrls","length","undefined","closeAuth","isAvailable","_isAvailable","InAppBrowser"],"sources":["C:/Users/MICRO/Documents/GitHub/AppLinkedPark/node_modules/react-native-inappbrowser-reborn/index.js"],"sourcesContent":["/**\n * InAppBrowser for React Native\n * https://github.com/proyecto26/react-native-inappbrowser\n *\n * @format\n * @flow strict-local\n */\n\nimport type {\n  BrowserResult,\n  AuthSessionResult,\n  InAppBrowserOptions,\n} from './types';\nimport {\n  isAndroid,\n  RNInAppBrowser,\n  openBrowserAsync,\n  openAuthSessionAsync,\n  openAuthSessionPolyfillAsync,\n  closeAuthSessionPolyfillAsync,\n  authSessionIsNativelySupported,\n} from './utils';\n\n/**\n * Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\n * or Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs) on Android.\n *\n * @param url The url to open in the web browser.\n * @param options A dictionary of key-value pairs.\n *\n * @return The promise behaves differently based on the platform:\n * - If the user closed the web browser, the Promise resolves with `{ type: 'cancel' }`.\n * - If the browser is closed using [`close`](#webbrowserdismissbrowser), the Promise resolves with `{ type: 'dismiss' }`.\n */\nasync function open(\n  url: string,\n  options?: InAppBrowserOptions\n): Promise<BrowserResult> {\n  return openBrowserAsync(url, options);\n}\n\nasync function openAuth(\n  url: string,\n  redirectUrl: string,\n  options?: InAppBrowserOptions\n): Promise<AuthSessionResult> {\n  if (authSessionIsNativelySupported()) {\n    return openAuthSessionAsync(url, redirectUrl, options);\n  } else {\n    return openAuthSessionPolyfillAsync(url, redirectUrl, options);\n  }\n}\n\n/**\n * Dismisses the presented web browser.\n */\nfunction close(): void {\n  RNInAppBrowser.close();\n}\n\n/**\n * Warm up the browser process.\n * Allows the browser application to pre-initialize itself in the background.\n * Significantly speeds up URL opening in the browser.\n * This is asynchronous and can be called several times.\n *\n * @platform android\n */\nfunction warmup(): Promise<boolean> {\n  if (isAndroid) {\n    return RNInAppBrowser.warmup();\n  }\n  return Promise.resolve(false);\n}\n\n/**\n * Tells the browser of a likely future navigation to a URL.\n * The most likely URL has to be specified first.\n * Optionally, a list of other likely URLs can be provided.\n * They are treated as less likely than the first one, and have to be sorted in decreasing priority order.\n * These additional URLs may be ignored.\n *\n * @param mostLikelyUrl Most likely URL, may be null if otherUrls is provided.\n * @param otherUrls Other likely destinations, sorted in decreasing likelihood order.\n *\n * @platform android\n */\nfunction mayLaunchUrl(\n  mostLikelyUrl: string,\n  otherUrls: Array<string> = []\n): void {\n  if (isAndroid) {\n    RNInAppBrowser.mayLaunchUrl(mostLikelyUrl, otherUrls);\n  }\n}\n\nfunction closeAuth(): void {\n  closeAuthSessionPolyfillAsync();\n  if (authSessionIsNativelySupported()) {\n    RNInAppBrowser.closeAuth();\n  } else {\n    close();\n  }\n}\n\nasync function isAvailable(): Promise<boolean> {\n  return RNInAppBrowser.isAvailable();\n}\n\nexport const InAppBrowser = {\n  open,\n  openAuth,\n  close,\n  closeAuth,\n  isAvailable,\n  warmup,\n  mayLaunchUrl,\n};\n\nexport default InAppBrowser;\n"],"mappings":";;AAaA,SACEA,SAAS,EACTC,cAAc,EACdC,gBAAgB,EAChBC,oBAAoB,EACpBC,4BAA4B,EAC5BC,6BAA6B,EAC7BC,8BAA8B;AACf,SAaFC,IAAIA,CAAAC,EAAA,EAAAC,GAAA;EAAA,QAAAC,KAAA,GAAAA,KAAA,IAAAC,iBAAA,CAAnB,WACEC,GAAW,EACXC,OAA6B,EACL;IACxB,OAAOX,gBAAgB,CAACU,GAAG,EAAEC,OAAO,CAAC;EACvC,CAAC,GAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEcC,QAAQA,CAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,QAAAC,SAAA,GAAAA,SAAA,IAAAT,iBAAA,CAAvB,WACEC,GAAW,EACXS,WAAmB,EACnBR,OAA6B,EACD;IAC5B,IAAIP,8BAA8B,CAAC,CAAC,EAAE;MACpC,OAAOH,oBAAoB,CAACS,GAAG,EAAES,WAAW,EAAER,OAAO,CAAC;IACxD,CAAC,MAAM;MACL,OAAOT,4BAA4B,CAACQ,GAAG,EAAES,WAAW,EAAER,OAAO,CAAC;IAChE;EACF,CAAC,GAAAC,KAAA,OAAAC,SAAA;AAAA;AAKD,SAASO,KAAKA,CAAA,EAAS;EACrBrB,cAAc,CAACqB,KAAK,CAAC,CAAC;AACxB;AAUA,SAASC,MAAMA,CAAA,EAAqB;EAClC,IAAIvB,SAAS,EAAE;IACb,OAAOC,cAAc,CAACsB,MAAM,CAAC,CAAC;EAChC;EACA,OAAOC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;AAC/B;AAcA,SAASC,YAAYA,CACnBC,aAAqB,EAEf;EAAA,IADNC,SAAwB,GAAAb,SAAA,CAAAc,MAAA,QAAAd,SAAA,QAAAe,SAAA,GAAAf,SAAA,MAAG,EAAE;EAE7B,IAAIf,SAAS,EAAE;IACbC,cAAc,CAACyB,YAAY,CAACC,aAAa,EAAEC,SAAS,CAAC;EACvD;AACF;AAEA,SAASG,SAASA,CAAA,EAAS;EACzB1B,6BAA6B,CAAC,CAAC;EAC/B,IAAIC,8BAA8B,CAAC,CAAC,EAAE;IACpCL,cAAc,CAAC8B,SAAS,CAAC,CAAC;EAC5B,CAAC,MAAM;IACLT,KAAK,CAAC,CAAC;EACT;AACF;AAAC,SAEcU,WAAWA,CAAA;EAAA,QAAAC,YAAA,GAAAA,YAAA,IAAAtB,iBAAA,CAA1B,aAA+C;IAC7C,OAAOV,cAAc,CAAC+B,WAAW,CAAC,CAAC;EACrC,CAAC,GAAAlB,KAAA,OAAAC,SAAA;AAAA;AAED,OAAO,IAAMmB,YAAY,GAAG;EAC1B3B,IAAI,EAAJA,IAAI;EACJS,QAAQ,EAARA,QAAQ;EACRM,KAAK,EAALA,KAAK;EACLS,SAAS,EAATA,SAAS;EACTC,WAAW,EAAXA,WAAW;EACXT,MAAM,EAANA,MAAM;EACNG,YAAY,EAAZA;AACF,CAAC;AAED,eAAeQ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}