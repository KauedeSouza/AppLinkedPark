{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from \"./styles\";\nimport Routes from \"../../componentes/menu/routes\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TelaParques() {\n  var _fazerSolicitacaoComToken;\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dados = _useState2[0],\n    setDados = _useState2[1];\n  function fazerSolicitacaoComToken() {\n    return (_fazerSolicitacaoComToken = _fazerSolicitacaoComToken || _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem(\"token\");\n        if (token) {\n          var headers = {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            Authorization: `Bearer ${token}`\n          };\n          var response = yield fetch(\"https://tcc-production-e100.up.railway.app/api/lazer\", {\n            method: \"GET\",\n            headers: headers\n          });\n          if (response.status === 200) {\n            var data = yield response.json();\n            console.log(\"Dados da resposta:\", data);\n            setDados(data);\n          } else {\n            console.error(\"Erro na solicitação:\", response.status);\n          }\n        } else {\n          console.log(\"Token não encontrado em AsyncStorage.\");\n        }\n      } catch (error) {\n        console.error(\"Erro ao fazer a solicitação:\", error);\n      }\n    })).apply(this, arguments);\n  }\n  fazerSolicitacaoComToken();\n  return _jsxs(View, {\n    children: [_jsxs(ScrollView, {\n      children: [_jsx(TouchableOpacity, {\n        style: styles.botaopular,\n        onPress: function onPress() {\n          return navigation.navigate(\"TelaInicial\");\n        },\n        children: _jsxs(Text, {\n          style: {\n            color: \"#000\",\n            fontSize: 35,\n            left: 30,\n            marginTop: 60\n          },\n          children: [_jsx(Icon, {\n            name: \"leftcircle\",\n            size: 40,\n            color: \"#17A558\"\n          }), \" Parques\"]\n        })\n      }), dados.map(function (item) {\n        return _jsxs(TouchableOpacity, {\n          style: {\n            height: 155\n          },\n          children: [_jsxs(View, {\n            style: {\n              backgroundColor: \"#B1D3C1\",\n              marginTop: 45,\n              borderRadius: 35,\n              width: 355,\n              height: 150,\n              marginLeft: 20\n            },\n            children: [_jsx(Image, {\n              source: require(`../../Imagens/${item.imagem}`),\n              style: styles.Imagens\n            }), _jsx(Text, {\n              style: {\n                marginLeft: 140,\n                marginTop: -115,\n                fontSize: 18\n              },\n              children: item.nome\n            }), _jsx(Text, {\n              style: {\n                marginLeft: 140,\n                marginTop: 15,\n                fontSize: 12\n              },\n              children: item.descricao\n            })]\n          }), _jsx(Icon, {\n            name: \"rightcircle\",\n            size: 30,\n            color: \"#17A558\",\n            style: {\n              marginLeft: 360,\n              marginTop: -85\n            }\n          }), _jsxs(Text, {\n            children: ['\\n', '\\n', '\\n', '\\n']\n          })]\n        }, item.idLazer);\n      })]\n    }), _jsxs(Text, {\n      children: ['\\n', '\\n', '\\n', '\\n']\n    }), _jsx(Routes, {})]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","View","Image","TouchableOpacity","Text","ScrollView","Icon","useNavigation","styles","Routes","AsyncStorage","jsx","_jsx","jsxs","_jsxs","TelaParques","_fazerSolicitacaoComToken","navigation","_useState","_useState2","_slicedToArray","dados","setDados","fazerSolicitacaoComToken","_asyncToGenerator","token","getItem","headers","Authorization","response","fetch","method","status","data","json","console","log","error","apply","arguments","children","style","botaopular","onPress","navigate","color","fontSize","left","marginTop","name","size","map","item","height","backgroundColor","borderRadius","width","marginLeft","source","require","imagem","Imagens","nome","descricao","idLazer"],"sources":["C:/Users/Aluno/Documents/GitHub/AppLinkedPark/src/paginas/TelaParques/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Image, TouchableOpacity, Text, ScrollView } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/AntDesign\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport styles from \"./styles\";\r\nimport Routes from \"../../componentes/menu/routes\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport default function TelaParques() {\r\n  const navigation = useNavigation();\r\n  const [dados, setDados] = useState([]);\r\n\r\n  async function fazerSolicitacaoComToken() {\r\n    try {\r\n      const token = await AsyncStorage.getItem(\"token\");\r\n\r\n      if (token) {\r\n        const headers = {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${token}`,\r\n        };\r\n\r\n        const response = await fetch(\r\n          \"https://tcc-production-e100.up.railway.app/api/lazer\",\r\n          {\r\n            method: \"GET\",\r\n            headers: headers,\r\n          }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          const data = await response.json();\r\n          console.log(\"Dados da resposta:\", data);\r\n          setDados(data);\r\n        } else {\r\n          console.error(\"Erro na solicitação:\", response.status);\r\n        }\r\n      } else {\r\n        console.log(\"Token não encontrado em AsyncStorage.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao fazer a solicitação:\", error);\r\n    }\r\n  }\r\n\r\n  fazerSolicitacaoComToken();\r\n  return (\r\n    <View>\r\n      <ScrollView>\r\n        <TouchableOpacity\r\n          style={styles.botaopular}\r\n          onPress={() => navigation.navigate(\"TelaInicial\")}\r\n        >\r\n          <Text\r\n            style={{ color: \"#000\", fontSize: 35, left: 30, marginTop: 60 }}\r\n          >\r\n            <Icon name=\"leftcircle\" size={40} color=\"#17A558\" /> Parques\r\n          </Text>\r\n        </TouchableOpacity>\r\n\r\n        {dados.map((item) => (\r\n          <TouchableOpacity key={item.idLazer} style={{ height: 155 }}>\r\n            <View\r\n              style={{\r\n                backgroundColor: \"#B1D3C1\",\r\n                marginTop: 45,\r\n                borderRadius: 35,\r\n                width: 355,\r\n                height: 150,\r\n                marginLeft: 20,\r\n              }}\r\n            >\r\n              <Image\r\n                source={require(`../../Imagens/${item.imagem}`)}\r\n                style={styles.Imagens}\r\n              />\r\n              <Text\r\n                style={{\r\n                  marginLeft: 140,\r\n                  marginTop: -115,\r\n                  fontSize: 18,\r\n                }}\r\n              >\r\n                {item.nome}\r\n              </Text>\r\n\r\n              <Text\r\n                style={{\r\n                  marginLeft: 140,\r\n                  marginTop: 15,\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                {item.descricao}\r\n              </Text>\r\n            </View>\r\n\r\n            <Icon\r\n              name=\"rightcircle\"\r\n              size={30}\r\n              color=\"#17A558\"\r\n              style={{\r\n                marginLeft: 360,\r\n                marginTop: -85,\r\n              }}\r\n            />\r\n                      <Text>{'\\n'}{'\\n'}{'\\n'}{'\\n'}</Text>\r\n                      \r\n          </TouchableOpacity>\r\n          \r\n        ))}\r\n\r\n        \r\n      </ScrollView>\r\n      <Text>{'\\n'}{'\\n'}{'\\n'}{'\\n'}</Text>\r\n\r\n      <Routes></Routes>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}