{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport styles from \"./style\";\nimport Routes from \"../../componentes/menu/routes\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TelaLazer() {\n  var _fazerSolicitacaoComToken;\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dados = _useState2[0],\n    setDados = _useState2[1];\n  function fazerSolicitacaoComToken() {\n    return (_fazerSolicitacaoComToken = _fazerSolicitacaoComToken || _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem(\"token\");\n        if (token) {\n          var headers = {\n            'Content-type': 'application/json; charset=UTF-8',\n            'Authorization': `Bearer ${token}`\n          };\n          var response = yield fetch('https://tcc-production-e100.up.railway.app/api/favorito/{}', {\n            method: 'GET',\n            headers: headers\n          });\n          if (response.status === 200) {\n            var data = yield response.json();\n            console.log(\"Dados da resposta:\", data);\n            setDados(data);\n          } else {\n            console.error(\"Erro na solicitação:\", response.status);\n          }\n        } else {\n          console.log(\"Token não encontrado em AsyncStorage.\");\n        }\n      } catch (error) {\n        console.error(\"Erro ao fazer a solicitação:\", error);\n      }\n    })).apply(this, arguments);\n  }\n  fazerSolicitacaoComToken();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#FFF'\n    },\n    children: [_jsxs(ScrollView, {\n      children: [_jsx(TouchableOpacity, {\n        style: styles.botaopular,\n        onPress: function onPress() {\n          return navigation.navigate('TelaInicial');\n        },\n        children: _jsxs(Text, {\n          style: {\n            color: '#000',\n            fontSize: 35,\n            left: 30,\n            marginTop: 60\n          },\n          children: [_jsx(Icon, {\n            name: \"leftcircle\",\n            size: 40,\n            color: \"#17A558\"\n          }), \"  Lazer\"]\n        })\n      }), dados.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          style: {\n            height: 160\n          },\n          onPress: function onPress() {\n            return navigation.navigate('TelaDetalhes', item);\n          },\n          children: _jsxs(View, {\n            style: {\n              backgroundColor: '#B1D3C1',\n              marginTop: 10,\n              borderRadius: 35,\n              width: 340,\n              height: 150,\n              marginLeft: 9\n            },\n            children: [_jsx(Image, {\n              source: {\n                uri: item.imagem\n              },\n              style: styles.Imagens\n            }), _jsx(Text, {\n              style: {\n                marginLeft: 140,\n                marginTop: -125,\n                fontSize: 18\n              },\n              children: item.nome\n            }), _jsx(Text, {\n              style: {\n                marginLeft: 140,\n                marginTop: 3,\n                fontSize: 12\n              },\n              children: item.descricao\n            })]\n          })\n        }, item.idLazer);\n      })]\n    }), _jsxs(Text, {\n      children: ['\\n', '\\n', '\\n', '\\n', '\\n']\n    }), _jsx(Routes, {})]\n  });\n}","map":{"version":3,"names":["React","useState","View","Image","TouchableOpacity","Text","ScrollView","useNavigation","styles","Routes","AsyncStorage","Icon","jsx","_jsx","jsxs","_jsxs","TelaLazer","_fazerSolicitacaoComToken","navigation","_useState","_useState2","_slicedToArray","dados","setDados","fazerSolicitacaoComToken","_asyncToGenerator","token","getItem","headers","response","fetch","method","status","data","json","console","log","error","apply","arguments","style","flex","backgroundColor","children","botaopular","onPress","navigate","color","fontSize","left","marginTop","name","size","map","item","index","height","borderRadius","width","marginLeft","source","uri","imagem","Imagens","nome","descricao","idLazer"],"sources":["C:/Users/Aluno/Documents/GitHub/AppLinkedPark/src/paginas/Favoritos/index.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport {View, Image, TouchableOpacity, Text, ScrollView} from 'react-native';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport styles from './style';\r\nimport Routes from '../../componentes/menu/routes';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\n\r\nexport default function TelaLazer(){\r\n    const navigation = useNavigation();\r\n    const [dados, setDados] = useState([]);\r\n\r\n\r\n    async function fazerSolicitacaoComToken() {\r\n        try {\r\n          // Obtém o token de AsyncStorage\r\n          const token = await AsyncStorage.getItem(\"token\");\r\n            \r\n        \r\n          if (token) {\r\n            // Construa o cabeçalho Authorization\r\n            const headers = {\r\n              'Content-type': 'application/json; charset=UTF-8',\r\n              'Authorization': `Bearer ${token}`\r\n            };\r\n      \r\n            // Faça a solicitação usando o cabeçalho personalizado\r\n            const response = await fetch('https://tcc-production-e100.up.railway.app/api/favorito/{}', {\r\n              method: 'GET', // ou outro método HTTP\r\n              headers: headers\r\n            });\r\n      \r\n            if (response.status === 200) {\r\n              const data = await response.json();\r\n              console.log(\"Dados da resposta:\", data);\r\n              setDados(data)\r\n            } else {\r\n              console.error(\"Erro na solicitação:\", response.status);\r\n            }\r\n          } else {\r\n            console.log(\"Token não encontrado em AsyncStorage.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erro ao fazer a solicitação:\", error);\r\n        }\r\n      }\r\n      \r\n\r\n      fazerSolicitacaoComToken();\r\n    return(\r\n      <View style= {{flex:1, backgroundColor: '#FFF'}}>\r\n      <ScrollView>\r\n                <TouchableOpacity style={styles.botaopular} onPress={ () => navigation.navigate('TelaInicial')} >\r\n                <Text style={{color: '#000',fontSize: 35, left: 30, marginTop: 60}}><Icon name=\"leftcircle\" size={40} color='#17A558'/>  Lazer</Text>\r\n            </TouchableOpacity>\r\n\r\n            {dados.map((item, index) => (\r\n        <TouchableOpacity\r\n          key={item.idLazer}\r\n          style={{ height: 160 }}\r\n          onPress={ () => navigation.navigate('TelaDetalhes',item)}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: '#B1D3C1',\r\n              marginTop: 10,\r\n              borderRadius: 35,\r\n              width: 340,\r\n              height: 150,\r\n              marginLeft: 9,\r\n            }}\r\n          >\r\n             <Image  source={{uri: item.imagem}} style={styles.Imagens} />\r\n            <Text\r\n              style={{\r\n                marginLeft: 140,\r\n                marginTop: -125,\r\n                fontSize: 18,\r\n              }}\r\n            >\r\n              {item.nome}\r\n            </Text>\r\n\r\n            <Text\r\n              style={{\r\n                marginLeft: 140,\r\n                marginTop: 3,\r\n                fontSize: 12,\r\n              }}\r\n            >\r\n              {item.descricao}\r\n            </Text>\r\n          </View>\r\n\r\n        \r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n\r\n                </ScrollView>\r\n                <Text>{'\\n'}{'\\n'}{'\\n'}{'\\n'}{'\\n'}</Text>\r\n \r\n            \r\n        <Routes></Routes>\r\n        </View>\r\n        \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}