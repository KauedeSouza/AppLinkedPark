{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [{\n  idLazer: item.nome,\n  nome: item.nome,\n  descricao: item.descricao,\n  imagem: item.imagem\n}, {\n  idLazer: item.nome,\n  nome: item.nome,\n  descricao: item.descricao,\n  imagem: item.imagem\n}];\nvar Pesquisa = function Pesquisa(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    query = _useState2[0],\n    setQuery = _useState2[1];\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      style: {\n        height: 160\n      },\n      onPress: function onPress() {\n        return navigation.navigate('TelaDetalhes', item);\n      },\n      children: _jsxs(View, {\n        style: {\n          backgroundColor: '#B1D3C1',\n          marginTop: 15,\n          borderRadius: 35,\n          width: 340,\n          height: 150,\n          marginLeft: 9\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: item.imagem\n          },\n          style: styles.Imagens\n        }), _jsx(Text, {\n          style: {\n            marginLeft: 140,\n            marginTop: -145,\n            fontSize: 18\n          },\n          children: item.nome\n        }), _jsx(Text, {\n          style: {\n            marginLeft: 140,\n            marginTop: 10,\n            fontSize: 10\n          },\n          children: item.descricao\n        })]\n      })\n    }, item.idLazer);\n  };\n  var filteredData = data.filter(function (item) {\n    return item.nome.toLowerCase().includes(query.toLowerCase());\n  });\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsx(TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 16,\n        paddingHorizontal: 8\n      },\n      placeholder: \"Digite sua pesquisa\",\n      onChangeText: function onChangeText(text) {\n        return setQuery(text);\n      },\n      value: query\n    }), _jsx(FlatList, {\n      data: filteredData,\n      keyExtractor: function keyExtractor(item) {\n        return item.idLazer;\n      },\n      renderItem: renderItem\n    })]\n  });\n};\nvar styles = {\n  Imagens: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    position: 'absolute',\n    left: 20,\n    top: 25\n  }\n};\nexport default Pesquisa;","map":{"version":3,"names":["React","useState","View","TextInput","FlatList","Text","Image","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","data","idLazer","item","nome","descricao","imagem","Pesquisa","_ref","navigation","_useState","_useState2","_slicedToArray","query","setQuery","renderItem","_ref2","style","height","onPress","navigate","children","backgroundColor","marginTop","borderRadius","width","marginLeft","source","uri","styles","Imagens","fontSize","filteredData","filter","toLowerCase","includes","flex","padding","borderColor","borderWidth","marginBottom","paddingHorizontal","placeholder","onChangeText","text","value","keyExtractor","position","left","top"],"sources":["C:/Users/Aluno/Documents/GitHub/AppLinkedPark/src/componentes/pesquisa/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, FlatList, Text, Image, TouchableOpacity } from 'react-native';\r\n\r\nconst data = [\r\n  {\r\n    idLazer: item.nome,\r\n    nome: item.nome,\r\n    descricao: item.descricao,\r\n    imagem: item.imagem\r\n  },\r\n  {\r\n    idLazer: item.nome,\r\n    nome: item.nome,\r\n    descricao: item.descricao,\r\n    imagem: item.imagem\r\n  },\r\n  // Adicione mais itens conforme necessÃ¡rio\r\n];\r\n\r\nconst Pesquisa = ({ navigation }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const renderItem = ({ item }) => (\r\n\r\n    <TouchableOpacity\r\n      key={item.idLazer}\r\n      style={{ height: 160 }}\r\n      onPress={() => navigation.navigate('TelaDetalhes', item)}\r\n    >\r\n      <View\r\n        style={{\r\n          backgroundColor: '#B1D3C1',\r\n          marginTop: 15,\r\n          borderRadius: 35,\r\n          width: 340,\r\n          height: 150,\r\n          marginLeft: 9,\r\n        }}\r\n      >\r\n        <Image source={{ uri: item.imagem }} style={styles.Imagens} />\r\n        <Text\r\n          style={{\r\n            marginLeft: 140,\r\n            marginTop: -145,\r\n            fontSize: 18,\r\n          }}\r\n        >\r\n          {item.nome}\r\n        </Text>\r\n\r\n        <Text\r\n          style={{\r\n            marginLeft: 140,\r\n            marginTop: 10,\r\n            fontSize: 10,\r\n          }}\r\n        >\r\n          {item.descricao}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n\r\n  );\r\n\r\n  const filteredData = data.filter((item) =>\r\n    item.nome.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 16 }}>\r\n      <TextInput\r\n        style={{\r\n          height: 40,\r\n          borderColor: 'gray',\r\n          borderWidth: 1,\r\n          marginBottom: 16,\r\n          paddingHorizontal: 8,\r\n        }}\r\n        placeholder=\"Digite sua pesquisa\"\r\n        onChangeText={(text) => setQuery(text)}\r\n        value={query}\r\n      />\r\n      <FlatList\r\n        data={filteredData}\r\n        keyExtractor={(item) => item.idLazer}\r\n        renderItem={renderItem}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  Imagens: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    position: 'absolute',\r\n    left: 20,\r\n    top: 25,\r\n  },\r\n};\r\n\r\nexport default Pesquisa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}