{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _checkResultAndReturnUrl, _openBrowserAsync, _openAuthSessionAsync, _openAuthSessionPolyfillAsync;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport invariant from 'invariant';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nexport var RNInAppBrowser = NativeModules.RNInAppBrowser;\nvar _redirectHandler;\nvar _linkingEventSubscription;\nvar _isAppStateAvailable = AppState.currentState !== null;\nfunction waitForRedirectAsync(returnUrl) {\n  return new Promise(function (resolve) {\n    _redirectHandler = function _redirectHandler(event) {\n      if (event.url && event.url.startsWith(returnUrl)) {\n        resolve({\n          url: event.url,\n          type: 'success'\n        });\n      }\n    };\n    _linkingEventSubscription = Linking.addEventListener('url', _redirectHandler);\n  });\n}\nfunction handleAppStateActiveOnce() {\n  return new Promise(function (resolve) {\n    var appStateEventSubscription;\n    function handleAppStateChange(nextAppState) {\n      if (!_isAppStateAvailable) {\n        _isAppStateAvailable = true;\n        return;\n      }\n      if (nextAppState === 'active') {\n        if (appStateEventSubscription && appStateEventSubscription.remove !== undefined) {\n          appStateEventSubscription.remove();\n        } else {\n          AppState.removeEventListener('change', handleAppStateChange);\n        }\n        resolve();\n      }\n    }\n    appStateEventSubscription = AppState.addEventListener('change', handleAppStateChange);\n  });\n}\nfunction checkResultAndReturnUrl(_x, _x2) {\n  return (_checkResultAndReturnUrl = _checkResultAndReturnUrl || _asyncToGenerator(function* (returnUrl, result) {\n    if (Platform.OS === 'android' && result.type !== 'cancel') {\n      try {\n        yield handleAppStateActiveOnce();\n        var url = yield Linking.getInitialURL();\n        return url && url.startsWith(returnUrl) ? {\n          url: url,\n          type: 'success'\n        } : result;\n      } catch (_unused) {\n        return result;\n      }\n    } else {\n      return result;\n    }\n  })).apply(this, arguments);\n}\nexport function openBrowserAsync(_x3) {\n  return (_openBrowserAsync = _openBrowserAsync || _asyncToGenerator(function* (url) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      animated: true,\n      modalEnabled: true,\n      dismissButtonStyle: 'close',\n      readerMode: false,\n      enableBarCollapsing: false\n    };\n    return RNInAppBrowser.open(_objectSpread(_objectSpread({}, options), {}, {\n      url: url,\n      preferredBarTintColor: options.preferredBarTintColor && processColor(options.preferredBarTintColor),\n      preferredControlTintColor: options.preferredControlTintColor && processColor(options.preferredControlTintColor)\n    }));\n  })).apply(this, arguments);\n}\nexport function openAuthSessionAsync(_x4, _x5) {\n  return (_openAuthSessionAsync = _openAuthSessionAsync || _asyncToGenerator(function* (url, redirectUrl) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      ephemeralWebSession: false\n    };\n    return RNInAppBrowser.openAuth(url, redirectUrl, options);\n  })).apply(this, arguments);\n}\nexport function openAuthSessionPolyfillAsync(_x6, _x7, _x8) {\n  return (_openAuthSessionPolyfillAsync = _openAuthSessionPolyfillAsync || _asyncToGenerator(function* (startUrl, returnUrl, options) {\n    invariant(!_redirectHandler, 'InAppBrowser.openAuth is in a bad state. _redirectHandler is defined when it should not be.');\n    try {\n      return yield Promise.race([openBrowserAsync(startUrl, options).then(function (result) {\n        return checkResultAndReturnUrl(returnUrl, result);\n      }), waitForRedirectAsync(returnUrl)]);\n    } finally {\n      closeAuthSessionPolyfillAsync();\n      RNInAppBrowser.close();\n    }\n  })).apply(this, arguments);\n}\nexport function closeAuthSessionPolyfillAsync() {\n  if (_redirectHandler) {\n    if (_linkingEventSubscription && _linkingEventSubscription.remove !== undefined) {\n      _linkingEventSubscription.remove();\n      _linkingEventSubscription = null;\n    } else {\n      Linking.removeEventListener('url', _redirectHandler);\n    }\n    _redirectHandler = null;\n  }\n}\nexport function authSessionIsNativelySupported() {\n  if (Platform.OS === 'android') {\n    return false;\n  }\n  var versionNumber = parseInt(Platform.Version, 10);\n  return versionNumber >= 11;\n}\nexport var isAndroid = Platform.OS === 'android';","map":{"version":3,"names":["invariant","processColor","Linking","Platform","AppState","NativeModules","RNInAppBrowser","_redirectHandler","_linkingEventSubscription","_isAppStateAvailable","currentState","waitForRedirectAsync","returnUrl","Promise","resolve","event","url","startsWith","type","addEventListener","handleAppStateActiveOnce","appStateEventSubscription","handleAppStateChange","nextAppState","remove","undefined","removeEventListener","checkResultAndReturnUrl","_x","_x2","_checkResultAndReturnUrl","_asyncToGenerator","result","OS","getInitialURL","_unused","apply","arguments","openBrowserAsync","_x3","_openBrowserAsync","options","length","animated","modalEnabled","dismissButtonStyle","readerMode","enableBarCollapsing","open","_objectSpread","preferredBarTintColor","preferredControlTintColor","openAuthSessionAsync","_x4","_x5","_openAuthSessionAsync","redirectUrl","ephemeralWebSession","openAuth","openAuthSessionPolyfillAsync","_x6","_x7","_x8","_openAuthSessionPolyfillAsync","startUrl","race","then","closeAuthSessionPolyfillAsync","close","authSessionIsNativelySupported","versionNumber","parseInt","Version","isAndroid"],"sources":["C:/Users/Aluno/Documents/GitHub/AppLinkedPark/node_modules/react-native-inappbrowser-reborn/utils.js"],"sourcesContent":["/**\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\nimport invariant from 'invariant';\r\nimport {\r\n  processColor,\r\n  Linking,\r\n  Platform,\r\n  AppState,\r\n  NativeModules,\r\n} from 'react-native';\r\nimport type {\r\n  BrowserResult,\r\n  RedirectEvent,\r\n  RedirectResult,\r\n  AuthSessionResult,\r\n  InAppBrowserOptions,\r\n} from './types';\r\n\r\nexport const RNInAppBrowser = NativeModules.RNInAppBrowser;\r\n\r\ntype EmitterSubscription = {\r\n  remove(): void,\r\n};\r\n\r\nlet _redirectHandler: ?(event: RedirectEvent) => void;\r\nlet _linkingEventSubscription: ?EmitterSubscription;\r\n// If the initial AppState.currentState is null, we assume that the first call to\r\n// AppState#change event is not actually triggered by a real change,\r\n// is triggered instead by the bridge capturing the current state\r\n// (https://reactnative.dev/docs/appstate#basic-usage)\r\nlet _isAppStateAvailable = AppState.currentState !== null;\r\n\r\ntype AppStateStatus = typeof AppState.currentState;\r\n\r\nfunction waitForRedirectAsync(returnUrl: string): Promise<RedirectResult> {\r\n  return new Promise(function (resolve) {\r\n    _redirectHandler = (event: RedirectEvent) => {\r\n      if (event.url && event.url.startsWith(returnUrl)) {\r\n        resolve({ url: event.url, type: 'success' });\r\n      }\r\n    };\r\n\r\n    _linkingEventSubscription = Linking.addEventListener(\r\n      'url',\r\n      _redirectHandler\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Detect Android Activity `OnResume` event once\r\n */\r\nfunction handleAppStateActiveOnce(): Promise<void> {\r\n  return new Promise(function (resolve) {\r\n    let appStateEventSubscription: ?EmitterSubscription;\r\n\r\n    function handleAppStateChange(nextAppState: AppStateStatus) {\r\n      if (!_isAppStateAvailable) {\r\n        _isAppStateAvailable = true;\r\n        return;\r\n      }\r\n\r\n      if (nextAppState === 'active') {\r\n        if (\r\n          appStateEventSubscription &&\r\n          appStateEventSubscription.remove !== undefined\r\n        ) {\r\n          appStateEventSubscription.remove();\r\n        } else {\r\n          AppState.removeEventListener('change', handleAppStateChange);\r\n        }\r\n        resolve();\r\n      }\r\n    }\r\n\r\n    appStateEventSubscription = AppState.addEventListener(\r\n      'change',\r\n      handleAppStateChange\r\n    );\r\n  });\r\n}\r\n\r\nasync function checkResultAndReturnUrl(\r\n  returnUrl: string,\r\n  result: AuthSessionResult\r\n): Promise<AuthSessionResult> {\r\n  if (Platform.OS === 'android' && result.type !== 'cancel') {\r\n    try {\r\n      await handleAppStateActiveOnce();\r\n      const url = await Linking.getInitialURL();\r\n      return url && url.startsWith(returnUrl) ? { url, type: 'success' } : result;\r\n    } catch {\r\n      return result;\r\n    }\r\n  } else {\r\n    return result;\r\n  }\r\n}\r\n\r\nexport async function openBrowserAsync(\r\n  url: string,\r\n  options?: InAppBrowserOptions = {\r\n    animated: true,\r\n    modalEnabled: true,\r\n    dismissButtonStyle: 'close',\r\n    readerMode: false,\r\n    enableBarCollapsing: false,\r\n  }\r\n): Promise<BrowserResult> {\r\n  return RNInAppBrowser.open({\r\n    ...options,\r\n    url,\r\n    preferredBarTintColor:\r\n      options.preferredBarTintColor &&\r\n      processColor(options.preferredBarTintColor),\r\n    preferredControlTintColor:\r\n      options.preferredControlTintColor &&\r\n      processColor(options.preferredControlTintColor),\r\n  });\r\n}\r\n\r\nexport async function openAuthSessionAsync(\r\n  url: string,\r\n  redirectUrl: string,\r\n  options?: InAppBrowserOptions = {\r\n    ephemeralWebSession: false,\r\n  }\r\n): Promise<AuthSessionResult> {\r\n  return RNInAppBrowser.openAuth(url, redirectUrl, options);\r\n}\r\n\r\nexport async function openAuthSessionPolyfillAsync(\r\n  startUrl: string,\r\n  returnUrl: string,\r\n  options?: InAppBrowserOptions\r\n): Promise<AuthSessionResult> {\r\n  invariant(\r\n    !_redirectHandler,\r\n    'InAppBrowser.openAuth is in a bad state. _redirectHandler is defined when it should not be.'\r\n  );\r\n  try {\r\n    return await Promise.race([\r\n      openBrowserAsync(startUrl, options).then(function (result) {\r\n        return checkResultAndReturnUrl(returnUrl, result);\r\n      }),\r\n      waitForRedirectAsync(returnUrl),\r\n    ]);\r\n  } finally {\r\n    closeAuthSessionPolyfillAsync();\r\n    RNInAppBrowser.close();\r\n  }\r\n}\r\n\r\nexport function closeAuthSessionPolyfillAsync(): void {\r\n  if (_redirectHandler) {\r\n    if (\r\n      _linkingEventSubscription &&\r\n      _linkingEventSubscription.remove !== undefined\r\n    ) {\r\n      _linkingEventSubscription.remove();\r\n      _linkingEventSubscription = null;\r\n    } else {\r\n      Linking.removeEventListener('url', _redirectHandler);\r\n    }\r\n    _redirectHandler = null;\r\n  }\r\n}\r\n\r\n/* iOS <= 10 and Android polyfill for SFAuthenticationSession flow */\r\nexport function authSessionIsNativelySupported(): boolean {\r\n  if (Platform.OS === 'android') {\r\n    return false;\r\n  }\r\n\r\n  const versionNumber = parseInt(Platform.Version, 10);\r\n  return versionNumber >= 11;\r\n}\r\n\r\nexport const isAndroid = Platform.OS === 'android';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}