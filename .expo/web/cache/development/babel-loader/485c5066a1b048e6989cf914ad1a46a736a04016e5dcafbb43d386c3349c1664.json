{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ImagePickerComponent = function ImagePickerComponent() {\n  var _ref;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageUri = _useState2[0],\n    setImageUri = _useState2[1];\n  var handlePickImage = function handlePickImage() {\n    return (_ref = _ref || _asyncToGenerator(function* () {\n      if (Platform.OS === 'android') {\n        var granted = yield PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE, {\n          title: 'Permissão para acessar a galeria',\n          message: 'Este aplicativo precisa de permissão para acessar sua galeria.',\n          buttonPositive: 'OK'\n        });\n        if (granted !== PermissionsAndroid.RESULTS.GRANTED) {\n          Alert.alert('Permissão negada', 'Você precisa conceder permissão para acessar a galeria.');\n          return;\n        }\n      }\n      var options = {\n        title: 'Selecione uma imagem',\n        storageOptions: {\n          skipBackup: true,\n          path: 'images'\n        }\n      };\n      ImagePicker.showImagePicker(options, function (response) {\n        if (response.didCancel) {\n          console.log('Seleção de imagem cancelada');\n        } else if (response.error) {\n          console.error('Erro ao selecionar imagem:', response.error);\n        } else {\n          setImageUri(response.uri);\n        }\n      });\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: handlePickImage,\n      children: _jsx(Text, {\n        children: \"Selecionar Imagem\"\n      })\n    }), imageUri && _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Imagem Selecionada:\"\n      }), _jsx(Image, {\n        source: {\n          uri: imageUri\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      })]\n    })]\n  });\n};\nexport default ImagePickerComponent;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Image","Alert","Platform","PermissionsAndroid","ImagePicker","jsx","_jsx","jsxs","_jsxs","ImagePickerComponent","_ref","_useState","_useState2","_slicedToArray","imageUri","setImageUri","handlePickImage","_asyncToGenerator","OS","granted","request","PERMISSIONS","READ_EXTERNAL_STORAGE","title","message","buttonPositive","RESULTS","GRANTED","alert","options","storageOptions","skipBackup","path","showImagePicker","response","didCancel","console","log","error","uri","apply","arguments","children","onPress","source","style","width","height"],"sources":["C:/Users/gabriel/Documents/GitHub/AppLinkedPark/src/componentes/perfil/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert,\r\n  Platform,\r\n  PermissionsAndroid,\r\n} from 'react-native';\r\nimport ImagePicker from 'react-native-image-picker'; // Importa o módulo apenas se você optar por usá-lo\r\n\r\nconst ImagePickerComponent = () => {\r\n  const [imageUri, setImageUri] = useState(null);\r\n\r\n  const handlePickImage = async () => {\r\n    if (Platform.OS === 'android') {\r\n      // Solicitar permissão para acessar a galeria no Android\r\n      const granted = await PermissionsAndroid.request(\r\n        PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,\r\n        {\r\n          title: 'Permissão para acessar a galeria',\r\n          message: 'Este aplicativo precisa de permissão para acessar sua galeria.',\r\n          buttonPositive: 'OK',\r\n        }\r\n      );\r\n\r\n      if (granted !== PermissionsAndroid.RESULTS.GRANTED) {\r\n        Alert.alert('Permissão negada', 'Você precisa conceder permissão para acessar a galeria.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Opções para a seleção da imagem\r\n    const options = {\r\n      title: 'Selecione uma imagem',\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    // Mostrar a galeria e obter a imagem\r\n    ImagePicker.showImagePicker(options, (response) => {\r\n      if (response.didCancel) {\r\n        console.log('Seleção de imagem cancelada');\r\n      } else if (response.error) {\r\n        console.error('Erro ao selecionar imagem:', response.error);\r\n      } else {\r\n        // Atualizar o estado com a URI da imagem selecionada\r\n        setImageUri(response.uri);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={handlePickImage}>\r\n        <Text>Selecionar Imagem</Text>\r\n      </TouchableOpacity>\r\n      {imageUri && (\r\n        <View>\r\n          <Text>Imagem Selecionada:</Text>\r\n          <Image source={{ uri: imageUri }} style={{ width: 200, height: 200 }} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ImagePickerComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,kBAAA;AAUxC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EAAA,IAAAC,IAAA;EACjC,IAAAC,SAAA,GAAgCf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,eAAe,YAAfA,eAAeA,CAAA;IAAA,QAAAN,IAAA,GAAAA,IAAA,IAAAO,iBAAA,CAAG,aAAY;MAClC,IAAIf,QAAQ,CAACgB,EAAE,KAAK,SAAS,EAAE;QAE7B,IAAMC,OAAO,SAAShB,kBAAkB,CAACiB,OAAO,CAC9CjB,kBAAkB,CAACkB,WAAW,CAACC,qBAAqB,EACpD;UACEC,KAAK,EAAE,kCAAkC;UACzCC,OAAO,EAAE,gEAAgE;UACzEC,cAAc,EAAE;QAClB,CACF,CAAC;QAED,IAAIN,OAAO,KAAKhB,kBAAkB,CAACuB,OAAO,CAACC,OAAO,EAAE;UAClD1B,KAAK,CAAC2B,KAAK,CAAC,kBAAkB,EAAE,yDAAyD,CAAC;UAC1F;QACF;MACF;MAGA,IAAMC,OAAO,GAAG;QACdN,KAAK,EAAE,sBAAsB;QAC7BO,cAAc,EAAE;UACdC,UAAU,EAAE,IAAI;UAChBC,IAAI,EAAE;QACR;MACF,CAAC;MAGD5B,WAAW,CAAC6B,eAAe,CAACJ,OAAO,EAAE,UAACK,QAAQ,EAAK;QACjD,IAAIA,QAAQ,CAACC,SAAS,EAAE;UACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC5C,CAAC,MAAM,IAAIH,QAAQ,CAACI,KAAK,EAAE;UACzBF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEJ,QAAQ,CAACI,KAAK,CAAC;QAC7D,CAAC,MAAM;UAELvB,WAAW,CAACmB,QAAQ,CAACK,GAAG,CAAC;QAC3B;MACF,CAAC,CAAC;IACJ,CAAC,GAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OACEjC,KAAA,CAACX,IAAI;IAAA6C,QAAA,GACHpC,IAAA,CAACP,gBAAgB;MAAC4C,OAAO,EAAE3B,eAAgB;MAAA0B,QAAA,EACzCpC,IAAA,CAACR,IAAI;QAAA4C,QAAA,EAAC;MAAiB,CAAM;IAAC,CACd,CAAC,EAClB5B,QAAQ,IACPN,KAAA,CAACX,IAAI;MAAA6C,QAAA,GACHpC,IAAA,CAACR,IAAI;QAAA4C,QAAA,EAAC;MAAmB,CAAM,CAAC,EAChCpC,IAAA,CAACN,KAAK;QAAC4C,MAAM,EAAE;UAAEL,GAAG,EAAEzB;QAAS,CAAE;QAAC+B,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAE,CAAC;IAAA,CACpE,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,eAAetC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}